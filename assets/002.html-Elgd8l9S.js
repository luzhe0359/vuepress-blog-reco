import{_ as p,r as o,o as l,c,a as n,b as s,d as t,e}from"./app-wc4Qvs9_.js";const i="/img/front/002-01.gif",u={},r=n("blockquote",null,[n("p",null,"基于 vue2.x + vant2.x 实现的仿微信@功能(稍作修改即可支持原生 js 和 react)，兼容 pc 端和手机端，如有 bug，欢迎提出~")],-1),d=n("p",null,"年后分配到一个新项目 - 企业微信论坛。项目涉及到发帖子、评论、留言等功能，刚好和我的个人博客功能类似，不能说一模一样吧，也八九不离十了（内心偷乐 😁😁）。",-1),k=n("p",null,[s("但是，令人头疼的问题来了，附加了一个"),n("code",null,"@功能"),s("，即在评论框中输入"),n("code",null,"@"),s("实现通知用户的功能。这个可以说触及到我的的知识盲点了，但其实很多应用都有这类功能了，如：微博、QQ、微信、企业微信... 哎，需求需要，不得不做，静下心来好好研究研究叭～")],-1),m=n("h2",{id:"一、技术方案分析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、技术方案分析","aria-hidden":"true"},"#"),s(" 一、技术方案分析")],-1),v=n("p",null,"方案很多，适合自己、适合团队才称得上完美。 这里归纳了几种常用的方案：",-1),b={href:"https://www.zhihu.com/question/20238997?rf=307336519",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/zurb/tribute",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/ichord/At.js",target:"_blank",rel:"noopener noreferrer"},_=n("li",null,"HTML5 新属性，表示元素是否可被用户编辑，即像 textarea 文本框那样可以输入内容。自己试了下这种方法，注意点很多，bug 也不少 (比如：实现到最后，刚看到了一丝丝希望 QAQ，但是，光标移至中间位置继续向右移动，光标最终会消失)，没找到解决办法，最终，放弃了 😂😂。",-1),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/contenteditable",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/lqyygyss/article/details/81773516",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,"拥有丰富的配置与强大的 API，支持 文本、富文本、图片、表情等。",-1),w={href:"https://github.com/quilljs/quill",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/surmon-china/vue-quill-editor",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/quilljs/quill",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.wangeditor.com/",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"wangeditor",-1),M=n("code",null,"Issues",-1),z=n("h2",{id:"二、效果和功能描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、效果和功能描述","aria-hidden":"true"},"#"),s(" 二、效果和功能描述")],-1),A=n("p",null,[s("最终目标：实现"),n("strong",null,"仿微信@用户"),s("功能。")],-1),P={href:"https://luzhe0359.github.io/at-mention/",target:"_blank",rel:"noopener noreferrer"},Q=e('<h3 id="_1-效果图" tabindex="-1"><a class="header-anchor" href="#_1-效果图" aria-hidden="true">#</a> 1. 效果图</h3><p><img src="'+i+'" alt="002-01.gif"></p><h3 id="_2-主要功能" tabindex="-1"><a class="header-anchor" href="#_2-主要功能" aria-hidden="true">#</a> 2. 主要功能</h3><ol><li>在输入框内任何地方输入<code>@</code>，或点击<code>@按钮</code>(demo 中<code>Show @ Menu</code>按钮)，弹出选择用户弹框</li><li>人员弹框支持<strong>搜索</strong>功能、支持<strong>异步</strong></li><li>选择人员，在光标后追加<code>@名称</code>，并绑定人员相关数据</li><li><code>@名称</code>作为整体，光标不可游走其中</li><li>删除时，将<code>@名称</code>作为一个整体进行删除</li></ol><p>实现以上功能，可以说已经完成了一个高仿微信@功能。</p><h2 id="三、准备工作" tabindex="-1"><a class="header-anchor" href="#三、准备工作" aria-hidden="true">#</a> 三、准备工作</h2>',6),E={href:"https://github.com/surmon-china/vue-quill-editor",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/quill-mention/quill-mention",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i vue-quill-editor quill-mmention <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化项目结构</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>at<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- editor --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>quill-editor</span>
      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myQuillEditor<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>editorOption<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!-- toolbar --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toolbar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> quillEditor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-quill-editor&#39;</span>
  <span class="token keyword">import</span> <span class="token string">&#39;quill/dist/quill.snow.css&#39;</span>
  <span class="token keyword">import</span> <span class="token string">&#39;quill-mention&#39;</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;at-mention&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      quillEditor
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 富文本html</span>
        <span class="token literal-property property">isClickMention</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否点击@按钮打开@菜单弹框</span>
        <span class="token literal-property property">isChineseInputMethod</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否中文输入法状态</span>
        <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 弹框显示状态</span>
        <span class="token literal-property property">editorOption</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&#39;说点什么呢。。。&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">toolbar</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token comment">// 自定义toolbar，本案例隐藏</span>
              <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;#toolbar&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">mention</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token comment">// 将 quill-mention 配置传递给 quill</span>
              <span class="token literal-property property">mentionDenotationChars</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定哪些字符可以触发@提及</span>
              <span class="token function-variable function">source</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">searchTerm<span class="token punctuation">,</span> renderList<span class="token punctuation">,</span> mentionChar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// @提及回调</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>searchTerm<span class="token punctuation">,</span> renderList<span class="token punctuation">,</span> mentionChar<span class="token punctuation">)</span>
                <span class="token function">renderList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> searchTerm<span class="token punctuation">)</span> <span class="token comment">// 因为我们要自定义弹框，所以这里把默认的@用户数据置空</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">editor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>myQuillEditor<span class="token punctuation">.</span>quill
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token comment">/* quill-toolbar */</span>
  <span class="token selector">.ql-toolbar</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化完成，就可以使用基于<code>quill-mention</code>实现的<code>@</code>功能了，但现有功能并不能满足我的需求（@之后从底部弹出用户列表），需要在现有基础上进行改造升级。</p><p><strong>提示：</strong></p><ol><li>mention -&gt; source 中，<code>renderList([], searchTerm)</code>, 因为我们要自定义弹框，所以这里把默认的@用户数据置空。</li><li>css 样式中<code>.ql-toolbar</code> ，去除默认边距，目的隐藏<code>toolbar</code></li><li>后续<code>data</code>所用到的数据，在初始化阶段已全部列出</li></ol><h2 id="四、实现步骤" tabindex="-1"><a class="header-anchor" href="#四、实现步骤" aria-hidden="true">#</a> 四、实现步骤</h2><h3 id="_1-中文输入法的判断" tabindex="-1"><a class="header-anchor" href="#_1-中文输入法的判断" aria-hidden="true">#</a> 1. 中文输入法的判断</h3><p>中文模式下输入@要进行判断，如：输入“说点什么呢@”，这个时候不能监听@事件。</p><p><strong>如何判断中文输入？</strong> 当用户使用中文输入法开始输入中文时，<code>compositionstart</code>事件就会被触发。当文中文输入完成或取消时，<code>compositionend</code>事件将被触发。利用这个机制我们就可以判断是否中文状态。</p>`,10),L={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/compositionstart_event",target:"_blank",rel:"noopener noreferrer"},S={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/compositionend_event",target:"_blank",rel:"noopener noreferrer"},D=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>at<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- editor --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>quill-editor</span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@compositionstart.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCompositionstart<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@compositionend.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCompositionend<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isChineseInputMethod</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否中文输入法状态</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 中文输入触发</span>
      <span class="token function">onCompositionstart</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isChineseInputMethod <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 中文输入关闭</span>
      <span class="token function">onCompositionend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isChineseInputMethod <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-事件的监听" tabindex="-1"><a class="header-anchor" href="#_2-事件的监听" aria-hidden="true">#</a> 2. @事件的监听</h3><p>判断设备类型（适配电脑和手机端）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 判断设备是否为 Mobile （提示：请勿在浏览器调试模式下，切换手机模式，否则会导致@功能失效）</span>
<span class="token function">isMobile</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(iPhone|iPod|Android|ios|iOS|iPad|Backerry|WebOS|Symbian|Windows Phone|Phone)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据终端判断用户是否输入@符号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 判断是否输入 @符号</span>
<span class="token function">isAtCode</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isMobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode <span class="token operator">===</span> <span class="token number">229</span> <span class="token operator">||</span> e<span class="token punctuation">.</span>keyCode <span class="token operator">===</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;Digit2&#39;</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode <span class="token operator">===</span> <span class="token number">50</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode <span class="token operator">===</span> <span class="token number">229</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;Digit2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>shiftKey<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听富文本 keydown 事件，判断是否为非中文状态下键入的@符号，如是，则打开用户列表弹框</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 键盘按下</span>
<span class="token function">onKeyDown</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 判断状态非中文输入法，并且监听到了@的事件</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isChineseInputMethod <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isAtCode</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 输入@打开@菜单弹框</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),O={href:"https://github.com/luzhe0359/at-mention",target:"_blank",rel:"noopener noreferrer"},W=e(`<h3 id="_3-点击用户生成-标签" tabindex="-1"><a class="header-anchor" href="#_3-点击用户生成-标签" aria-hidden="true">#</a> 3. 点击用户生成@标签</h3><p>使用<code>quill-mention</code>提供的 API - <code>insertItem</code>来实现。 当点击@列表中的想要@的用户，则触发<code>selectItem</code>事件，把@的内容插入到对应位置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择要@的用户</span>
<span class="token function">selectItem</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertItem</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">// 插入@内容,item即为用户信息</span>
<span class="token function">insertItem</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mention <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>editor<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token string">&#39;mention&#39;</span><span class="token punctuation">)</span>
  mention<span class="token punctuation">.</span><span class="token function">insertItem</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">denotationChar</span><span class="token operator">:</span> <span class="token string">&#39;@&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样会有一个问题，@用户的时候多了一个@符号，原因是<code>insertItem</code>会默认帮我们添加一个@符号，加上手动输入的@符号就多出一个@。 所以这里需要特殊处理一下，调用<code>history.undo()</code>撤销 API（需要额外配置下<code>history</code>参数）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">editorOption</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// history 配置（History模块负责处理Quill的撤销和重做）</span>
      <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">// 将延迟设置为0，那么几乎每次输入字符都会被记录成一个变化，然后，撤销动作就会一次撤销一个字符</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">// 选择要@的用户</span>
<span class="token function">selectItem</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果不是通过@按钮打开的弹框，则需要删除多余的@符号</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isClickMention<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 撤销一步，删除手动输入的@符号（需在modules中配置history: { delay: 0 }）</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertItem</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">// 撤销</span>
<span class="token function">undo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>editor<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-点击外部的-按钮插入-标签" tabindex="-1"><a class="header-anchor" href="#_4-点击外部的-按钮插入-标签" aria-hidden="true">#</a> 4. 点击外部的@按钮插入@标签</h3><p>非常简单，直接调用 API - <code>insertItem </code>来插入@标签即可。(会默认添加@符号)</p><h2 id="五、总结" tabindex="-1"><a class="header-anchor" href="#五、总结" aria-hidden="true">#</a> 五、总结</h2><p>这个功能我自己测试没问题，兼容性也不错(并未进行详细测试、可能会存在其他问题)，如果使用中遇到问题，欢迎提出反馈，希望能和大家一起进步~</p>`,9),B={href:"https://zugelu.com/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://juejin.cn/user/1151943917971031",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.zhihu.com/people/zugelu",target:"_blank",rel:"noopener noreferrer"},K={href:"https://blog.csdn.net/weixin_44388523",target:"_blank",rel:"noopener noreferrer"},G=n("strong",null,"关注足各路、前端不迷路！",-1);function J($,F){const a=o("ExternalLinkIcon");return l(),c("div",null,[r,d,k,m,v,n("ol",null,[n("li",null,[s("textarea、input (例：新浪微博) "),n("ul",null,[n("li",null,[s("这种方式我感觉是最最最复杂的，而且坑也巨多。具体原因参考"),n("a",b,[s("@提及如何实现-包含了使用 textarea 实现@功能的解析"),t(a)]),s("。相信我如果你手写，你不会快乐的！！！所以推荐下面的库给大家、只要稍作改动就可以使用啦～～")]),n("li",null,[n("a",h,[s("Tribute.js(推荐)"),t(a)])]),n("li",null,[n("a",g,[s("At.js (JQ)"),t(a)])])])]),n("li",null,[s("contenteditable (例：QQ 空间, 掘金) "),n("ul",null,[_,n("li",null,[n("a",y,[s("contenteditable-MDN"),t(a)])]),n("li",null,[n("a",f,[s("contenteditable 实现编辑器,光标、输入法处理"),t(a)])])])]),n("li",null,[s("富文本 (例：企业微信 TAPD) "),n("ul",null,[q,n("li",null,[s("考虑到扩展性与踩坑的深浅、api 的丰富程度，最终选择 "),n("a",w,[s("quill 富文本"),t(a)]),s(" 做为最终的方案。(PS:因为使用 vue 开发所以这里使用的是"),n("a",x,[s("vue-quill-editor"),t(a)]),s(")")]),n("li",null,[s("推荐几个常用的富文本"),n("a",C,[s("quill"),t(a)]),s("、"),n("a",j,[s("wangeditor"),t(a)]),s("（不得不夸一下"),I,s("，前一天在"),M,s("提出@功能需求，隔天就做出了一版@功能的插件，可惜我已经用前者实现了 👽👽）")])])])]),z,A,n("p",null,[s("demo 地址: "),n("a",P,[s("zugelu - 仿微信@功能"),t(a)])]),Q,n("p",null,[s("本案例是基于"),n("a",E,[s("vue-quill-editor 富文本编辑器"),t(a)]),s("(v3.0.6)和"),n("a",N,[s("quill-mention"),t(a)]),s("(v3.1.0)来实现的。需下载 quill 相关依赖。")]),T,n("ul",null,[n("li",null,[n("a",L,[s("compositionstart 事件"),t(a)]),s(" 当用户使用拼音输入法开始输入汉字时，事件就会被触发。")]),n("li",null,[n("a",S,[s("compositionend 事件"),t(a)]),s(" 当中文输入完成或取消时，事件将被触发。")])]),D,n("p",null,[s("PS：本案例用户列表的代码就不贴了，可根据需求自定义，或前往"),n("a",O,[s("at-mention"),t(a)]),s("获取 demo 代码。")]),W,n("p",null,[s("本文首发于"),n("a",B,[s("足各路的博客"),t(a)]),s("，后续会同步更新到"),n("a",V,[s("掘金"),t(a)]),s("、"),n("a",H,[s("知乎"),t(a)]),s("、"),n("a",K,[s("CSDN"),t(a)]),s("。"),G])])}const U=p(u,[["render",J],["__file","002.html.vue"]]);export{U as default};
